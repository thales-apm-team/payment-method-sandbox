import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "com.github.johnrengelman.shadow" version "2.0.1"
    id "org.sonarqube" version "2.6.1"
    id "org.owasp.dependencycheck" version "3.3.1"
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'jacoco'

description = 'payment-method-sandbox'
group 'com.payline.payment.sandbox'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

def externalFileName = "$projectDir/.external"
if (file(externalFileName).exists()) {
    apply from: "external.gradle"
} else {
    apply from: "monext.gradle"
}

configurations {
    fatJarTest
}

ext {
    paymentMethodApiVersion = '1.5'
}

dependencies {
    compile group:'com.payline', name: 'payment-method-api', version: "$paymentMethodApiVersion"

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
    implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.0.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.5.0'


    fatJarTest group: 'org.mockito', name: 'mockito-core', version: '3.0.0'
    fatJarTest group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.0'
    fatJarTest group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.5.0'
}

assemble.dependsOn shadowJar

shadowJar {
    classifier = ''
    dependencies {
        exclude(dependency('com.payline:payment-method-api'))
        exclude(dependency('org.apache.logging.log4j:log4j-api:2.11.0'))
        exclude(dependency('org.apache.logging.log4j:log4j-core:2.11.0'))

        exclude(dependency('org.junit.jupiter:junit-jupiter-params:5.5.0'))
        exclude(dependency('org.junit.jupiter:junit-jupiter-api:5.5.0'))
    }
}

// Replace tokens in resources files after compilation
processResources {
    filesMatching('release.properties') {
        filter( ReplaceTokens, tokens:[
                'version': project.version.replaceFirst("-.*", ""),
                'date': new Date().format("dd/MM/yyyy")
        ])
    }
}

test {
    useJUnitPlatform()
    exclude '**/test/integration/*'
}